@using Sitecore.ExperienceForms.Mvc.Html
@model Sitecore.ExperienceForms.Mvc.Models.Fields.EmailConfirmationViewModel

<label for="@Html.IdFor(m => Model.Value)" class="@Model.LabelCssClassSettings.CssClass">@Model.Title</label>
<input id="@Html.IdFor(m => Model.Value)" name="@Html.NameFor(m => Model.Value)" class="@Model.CssClassSettings.CssClass" type="email" value="@Model.Value" @if (Model.MaxLength > 0) {<text> maxlength="@Model.MaxLength"</text>} placeholder="@Model.PlaceholderText" data-sc-tracking="@Model.IsTrackingEnabled" data-sc-field-name="@Model.Name" data-sc-field-key="@Model.ConditionSettings.FieldKey" @Html.GenerateUnobtrusiveValidationAttributes(m => Model.Value)/>
@Html.ValidationMessageFor(m => Model.Value)
<label for="@Html.IdFor(m => Model.ConfirmEmail)" class="@Model.LabelCssClassSettings.CssClass">@Model.ConfirmEmailLabel</label>
<input id="@Html.IdFor(m => Model.ConfirmEmail)" name="@Html.NameFor(m => Model.ConfirmEmail)" class="@Model.CssClassSettings.CssClass" type="email" placeholder="@Model.ConfirmEmailPlaceholder" data-sc-tracking="@Model.IsTrackingEnabled" data-sc-field-name="@Model.Name" data-sc-field-key="@Model.ConditionSettings.FieldKey" @Html.GenerateUnobtrusiveValidationAttributes(m => Model.ConfirmEmail)/>
@Html.ValidationMessageFor(m => Model.ConfirmEmail)