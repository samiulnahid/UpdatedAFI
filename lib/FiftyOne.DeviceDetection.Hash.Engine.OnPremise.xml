<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FiftyOne.DeviceDetection.Hash.Engine.OnPremise</name>
    </assembly>
    <members>
        <member name="T:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ComponentMetaData">
            <summary>
            Data class that contains meta-data relating to a specific 
            component.
            A component is a logical group of properties for example, all
            properties relating to the hardware device or all properties
            relating to the web browser.
            This variation is used for meta-data that is generated by the
            native C/C++ code using the information in the data file.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ComponentMetaData.DefaultProfile">
            <summary>
            The default profile for this component.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ComponentMetaData.Properties">
            <summary>
            Get the meta-data for all properties associated with this 
            component.
            </summary>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ComponentMetaData.GetProperties">
            <summary>
            Get the meta-data for all properties that are associated with 
            this component.
            </summary>
            <returns>
            Meta-data for all properties that are associated with this 
            component.
            </returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ComponentMetaData.GetProperty(System.String)">
            <summary>
            Get the meta-data for the specified property.
            </summary>
            <param name="propertyName">
            The name of the property to get the meta-data for.
            </param>
            <returns>
            The meta-data for the specified property.
            </returns>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ComponentMetaData.Name">
            <summary>
            The name of this component.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ComponentMetaData.ComponentId">
            <summary>
            The id number for this component.
            </summary>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ComponentMetaData.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing">
            Will be false if called from finalizer
            </param>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ComponentMetaData.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ComponentMetaData.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ComponentMetaData.GetHashCode">
            <summary>
            Get a hash code for this component
            </summary>
            <returns></returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ComponentMetaData.Equals(FiftyOne.Pipeline.Engines.FiftyOne.Data.IComponentMetaData)">
            <summary>
            Check if this component is equal to another 
            <see cref="T:FiftyOne.Pipeline.Engines.FiftyOne.Data.IComponentMetaData"/> instance.
            </summary>
            <param name="other">
            The other instance to check for equality.
            </param>
            <returns>
            True if the instances are equal. False if not.
            </returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ComponentMetaData.CompareTo(FiftyOne.Pipeline.Engines.FiftyOne.Data.IComponentMetaData)">
            <summary>
            Compare this instance to another object that implements 
            <see cref="T:FiftyOne.Pipeline.Engines.FiftyOne.Data.IComponentMetaData"/>.
            </summary>
            <param name="other">
            The <see cref="T:FiftyOne.Pipeline.Engines.FiftyOne.Data.IComponentMetaData"/> instance to compare to.
            </param>
            <returns>
            &gt;0 if this instance precedes `other` in the sort order.
            0 if they are equal in the sort order.
            &lt;0 if `other` precedes this instance in the sort order.
            </returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ComponentMetaData.ToString">
            <summary>
            Return a string representation of this instance.
            </summary>
            <returns>
            A string representation of this instance.
            </returns>
        </member>
        <member name="T:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ComponentMetaDataHash">
            <summary>
            Data class that contains meta-data relating to a specific 
            component.
            A component is a logical group of properties for example, all
            properties relating to the hardware device or all properties
            relating to the web browser.
            This variation is used for meta-data that is generated by the
            c# code as opposed to the <see cref="T:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ComponentMetaData"/> class
            that is used for meta-data generated from the native C/C++ code.
            For example, this is used to add placeholder component meta-data 
            for the 'metrics' properties because they don't have any associated
            meta-data in the data file.
            </summary>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ComponentMetaDataHash.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">
            The name of this component
            </param>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ComponentMetaDataHash.#ctor(System.String,System.Collections.Generic.List{FiftyOne.Pipeline.Engines.FiftyOne.Data.IFiftyOneAspectPropertyMetaData})">
            <summary>
            Constructor
            </summary>
            <param name="name">
            The name of this component
            </param>
            <param name="properties">
            The meta-data for the properties associated with this
            component.
            </param>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.DeviceDataHash.#ctor(Microsoft.Extensions.Logging.ILogger{FiftyOne.Pipeline.Engines.Data.AspectDataBase},FiftyOne.Pipeline.Core.FlowElements.IPipeline,FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngine,FiftyOne.Pipeline.Engines.Services.IMissingPropertyService)">
            <summary>
            Construct a new instance of the wrapper.
            </summary>
            <param name="logger">
            The logger instance to use.
            </param>
            <param name="pipeline">
            The Pipeline that created this data instance.
            </param>
            <param name="engine">
            The engine that create this data instance.
            </param>
            <param name="missingPropertyService">
            The <see cref="T:FiftyOne.Pipeline.Engines.Services.IMissingPropertyService"/> to use if a requested
            property does not exist.
            </param>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.DeviceDataHash.GetSingleResults(System.String)">
             <summary>
             Get a single native results instance. If there is only one available,
             that is what is returned. If there are more, then the first one which
             contains values for the requested property is returned.
            </summary>
            <param name="propertyName">used to select results from list</param>
            <returns>single native results instance</returns>
        </member>
        <member name="T:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.FiftyOneAspectPropertyMetaDataHash">
            <summary>
            Data class that contains meta-data relating to a specific 
            property. 
            This variation is used for meta-data that is generated by the
            c# code rather than the native C/C++ code.
            For example, this is used to add placeholder property meta-data 
            for the 'metrics' properties because they don't have any associated
            meta-data in the data file.
            </summary>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.FiftyOneAspectPropertyMetaDataHash.#ctor(FiftyOne.Pipeline.Engines.FlowElements.IAspectEngine,System.String,System.Type,System.String,System.Collections.Generic.IList{System.String},System.Boolean,FiftyOne.DeviceDetection.Shared.Data.ComponentMetaDataDefault,FiftyOne.DeviceDetection.Shared.Data.ValueMetaDataDefault,System.Collections.Generic.IEnumerable{FiftyOne.DeviceDetection.Shared.Data.ValueMetaDataDefault},System.String)">
            <summary>
            Constructor
            </summary>
            <param name="element"></param>
            <param name="name"></param>
            <param name="type"></param>
            <param name="category"></param>
            <param name="dataTiersWherePresent"></param>
            <param name="available"></param>
            <param name="component"></param>
            <param name="defaultValue"></param>
            <param name="values"></param>
            <param name="description"></param>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.FiftyOneAspectPropertyMetaDataHash.#ctor(FiftyOne.Pipeline.Engines.FlowElements.IAspectEngine,System.String,System.Type,System.String,System.Collections.Generic.IList{System.String},System.Boolean,FiftyOne.DeviceDetection.Shared.Data.ComponentMetaDataDefault,FiftyOne.DeviceDetection.Shared.Data.ValueMetaDataDefault,System.Collections.Generic.IEnumerable{FiftyOne.DeviceDetection.Shared.Data.ValueMetaDataDefault},System.String,System.Byte,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="element"></param>
            <param name="name"></param>
            <param name="type"></param>
            <param name="category"></param>
            <param name="dataTiersWherePresent"></param>
            <param name="available"></param>
            <param name="component"></param>
            <param name="defaultValue"></param>
            <param name="values"></param>
            <param name="description"></param>
            <param name="displayOrder"></param>
            <param name="list"></param>
            <param name="mandatory"></param>
            <param name="obsolete"></param>
            <param name="show"></param>
            <param name="showValues"></param>
            <param name="url"></param>
        </member>
        <member name="T:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.IDeviceDataHash">
            <summary>
            Represents a data class that contains device data from an 
            on-premise device detection engine. 
            </summary>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.IDeviceDataHash.GetValues(System.String)">
            <summary>
            Gets all values that this instance has for a specific property.
            This is used for 'list' properties that can have multiple 
            values for a single profile.
            </summary>
            <param name="propertyName">
            The property to get the values for.
            </param>
            <returns>
            An list of strings wrapped in an <see cref="T:FiftyOne.Pipeline.Engines.Data.IAspectPropertyValue"/>
            instance.
            </returns>
        </member>
        <member name="T:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ProfileMetaData">
            <summary>
            Data class that contains meta-data relating to a specific 
            profile. 
            A profile is a set of specific property values for an individual 
            component.
            For example, the Apple iPhone 8 has a profile that contains
            values for all the hardware component properties.
            This implementation of the <see cref="T:FiftyOne.Pipeline.Engines.FiftyOne.Data.IProfileMetaData"/> interface
            is used for meta-data that is generated by the native C/C++ code
            from information in the data file.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ProfileMetaData.ProfileId">
            <summary>
            Get the id for this profile. 
            The id number is guaranteed to stay the same for a profile
            regardless of data updates and API version changes.
            </summary>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ProfileMetaData.GetValues">
            <summary>
            Get the meta-data for all values associated with this profile. 
            </summary>
            <returns>
            The meta-data for all values associated with this profile.
            </returns>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ProfileMetaData.Component">
            <summary>
            Get the meta-data for the component associated with this profile.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ProfileMetaData.Name">
            <summary>
            Get the name of this profile.
            </summary>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ProfileMetaData.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing">
            False if called from finalizer
            </param>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ProfileMetaData.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ProfileMetaData.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ProfileMetaData.GetHashCode">
            <summary>
            Get a hash code for this profile
            </summary>
            <returns></returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ProfileMetaData.Equals(FiftyOne.Pipeline.Engines.FiftyOne.Data.IProfileMetaData)">
            <summary>
            Check if this instance is equal to another object that 
            implements <see cref="T:FiftyOne.Pipeline.Engines.FiftyOne.Data.IProfileMetaData"/>.
            </summary>
            <param name="other">
            The <see cref="T:FiftyOne.Pipeline.Engines.FiftyOne.Data.IProfileMetaData"/> to check for equality
            </param>
            <returns>
            True if the two instances are equal.
            False otherwise
            </returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ProfileMetaData.CompareTo(FiftyOne.Pipeline.Engines.FiftyOne.Data.IProfileMetaData)">
            <summary>
            Compare this instance to another object that implements 
            <see cref="T:FiftyOne.Pipeline.Engines.FiftyOne.Data.IProfileMetaData"/>.
            </summary>
            <param name="other">
            The <see cref="T:FiftyOne.Pipeline.Engines.FiftyOne.Data.IProfileMetaData"/> instance to compare to.
            </param>
            <returns>
            &gt;0 if this instance precedes `other` in the sort order.
            0 if they are equal in the sort order.
            &lt;0 if `other` precedes this instance in the sort order.
            </returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ProfileMetaData.GetValues(System.String)">
            <summary>
            Get the meta-data for values from this profile for the 
            specified property.
            </summary>
            <param name="propertyName">
            The name of the property to get values for.
            </param>
            <returns>
            The value meta-data for the specified property on this profile. 
            </returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ProfileMetaData.GetValue(System.String,System.String)">
            <summary>
            Get the meta-data for the specified property and value from
            this profile.
            </summary>
            <param name="propertyName">
            The name of the property to get the meta-data for.
            </param>
            <param name="valueName">
            The value to get the meta-data for.
            </param>
            <returns>
            The value meta-data for the specified value if it exists
            on this profile. 
            </returns>
        </member>
        <member name="T:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash">
            <summary>
            Data class that contains meta-data relating to a specific 
            property. 
            This implementation of the 
            <see cref="T:FiftyOne.Pipeline.Engines.FiftyOne.Data.IFiftyOneAspectPropertyMetaData"/> interface
            is used for meta-data that is generated by the native C/C++ code
            from information in the data file.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.Url">
            <summary>
            A URL that will display a page with more detail about the 
            property.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.DisplayOrder">
            <summary>
            A byte used to order property meta-data instances. For example
            when displaying a list of properties to a user.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.Mandatory">
            <summary>
            True if this property must be filled in. False if it can be 
            left blank or 'Unknown'
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.List">
            <summary>
            True if this is a 'list' property. False if not.
            List properties can have multiple values on a single profile.
            For example, an Apple device such as the iPhone 8 has multiple 
            model numbers - A1863, A1864, A1897, etc. Therefore the 
            HardwareModelVariants property is a list property.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.Obsolete">
            <summary>
            True if the property is obsolete. False otherwise.
            Obsolete properties are usually retained for some time for
            backwards compatibility but may be removed in a future release 
            and should not be used if possible.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.Show">
            <summary>
            True if 51Degrees recommends that the property should appear 
            in lists shown to the user. False if not.
            </summary>
            <remarks>
            This is used by the 51Degrees Property Dictionary: 
            https://51degrees.com/resources/property-dictionary and is 
            made available for customers should they wish to make use of it.
            </remarks>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.ShowValues">
            <summary>
            True if 51Degrees recommends that all possible values of this 
            property can be shown to the user. False if not.
            Properties that have very large lists of possible values will
            usually have this set to false.
            </summary>
            <remarks>
            This is used by the 51Degrees Property Dictionary: 
            https://51degrees.com/resources/property-dictionary and is 
            made available for customers should they wish to make use of it.
            </remarks>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.Description">
            <summary>
            A description of the property
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.Component">
            <summary>
            The component associated with this property.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.Values">
            <summary>
            The values that this property can have.
            Note that this is based on information in the data file so it
            is possible (or even likely, depending on the property) that a 
            future data file will have different possible values.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.DefaultValue">
            <summary>
            Get the default value for this property
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.DataTiersWherePresent">
            <summary>
            A list of the string names of the data tiers that this property
            is available in.
            For example: 'Lite' or 'Enterprise' 
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.Available">
            <summary>
            True if this property is available from the current data source.
            False if not.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.Name">
            <summary>
            The name of the property.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.Category">
            <summary>
            The category that this property belongs to.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.Type">
            <summary>
            The type of the values returned by this property.
            </summary>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.GetComponent">
            <summary>
            Get the component associated with this property.
            </summary>
            <returns>
            The component associated with this property.
            </returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.GetValues">
            <summary>
            The values that this property can have.
            Note that this is based on information in the data file so it
            is possible (or even likely, depending on the property) that a 
            future data file will have different possible values.
            </summary>
            <returns>
            The values that this property can have.
            </returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.GetValue(System.String)">
            <summary>
            Get the meta-data for an individual value entry.
            </summary>
            <param name="valueName">
            the value to get the meta-data for.
            </param>
            <returns>
            The requested meta-data.
            </returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.GetDefaultValue">
            <summary>
            Get the default value for this property.
            </summary>
            <returns>
            A meta-data instance for the default value.
            </returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.Equals(FiftyOne.Pipeline.Engines.FiftyOne.Data.IFiftyOneAspectPropertyMetaData)">
            <summary>
            Check if this instance is equal to another object that 
            implements <see cref="T:FiftyOne.Pipeline.Engines.FiftyOne.Data.IFiftyOneAspectPropertyMetaData"/>.
            </summary>
            <param name="other">
            The <see cref="T:FiftyOne.Pipeline.Engines.FiftyOne.Data.IFiftyOneAspectPropertyMetaData"/> to check 
            for equality.
            </param>
            <returns>
            True if the two instances are equal.
            False otherwise
            </returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.Equals(System.String)">
            <summary>
            Check if this instance is equal to a given string.
            This uses a comparison with the Name property.
            </summary>
            <param name="other">
            The string to check for equality.
            </param>
            <returns>
            True if the two instances are equal.
            False otherwise
            </returns>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.Element">
            <summary>
            Get the element that created this meta-data instance.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.ItemProperties">
            <summary>
            Get the meta-data for any sub-properties.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.ItemPropertyDictionary">
            <inheritdoc/>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.DelayExecution">
            <inheritdoc/>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.EvidenceProperties">
            <inheritdoc/>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing">
            False if called from finalizer
            </param>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.CompareTo(FiftyOne.Pipeline.Engines.FiftyOne.Data.IFiftyOneAspectPropertyMetaData)">
            <summary>
            Compare this instance to another object that implements 
            <see cref="T:FiftyOne.Pipeline.Engines.FiftyOne.Data.IFiftyOneAspectPropertyMetaData"/>.
            </summary>
            <param name="other">
            The <see cref="T:FiftyOne.Pipeline.Engines.FiftyOne.Data.IFiftyOneAspectPropertyMetaData"/> instance to 
            compare to.
            </param>
            <returns>
            &gt;0 if this instance precedes `other` in the sort order.
            0 if they are equal in the sort order.
            &lt;0 if `other` precedes this instance in the sort order.
            </returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.ToString">
            <summary>
            Return a string representation of this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.Equals(System.Object)">
            <summary>
            Check if this instance is equal to a given object.
            </summary>
            <param name="obj">
            The object to check for equality.
            </param>
            <returns>
            True if the two instances are equal.
            False otherwise
            </returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.PropertyMetaDataHash.GetHashCode">
            <summary>
            Get a hash code for this instance.
            The value-space is greater than the key-space so hash 
            collisions are possible and may need to be accounted for,
            depending on your use-case.
            </summary>
            <returns>
            A hash code.
            </returns>
        </member>
        <member name="T:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ValueMetaData">
            <summary>
            Data class that contains meta-data relating to a specific 
            value. 
            This implementation of the <see cref="T:FiftyOne.Pipeline.Engines.FiftyOne.Data.IValueMetaData"/> interface
            is used for meta-data that is generated by the native C/C++ code
            from information in the data file.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ValueMetaData.Property">
            <summary>
            Get the meta-data for the property associated with this
            value instance.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ValueMetaData.Name">
            <summary>
            The value
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ValueMetaData.Description">
            <summary>
            A description of this value.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ValueMetaData.Url">
            <summary>
            A URL to get more information on this value.
            </summary>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ValueMetaData.GetProperty">
            <summary>
            Get the property that this value instance is associated with.
            </summary>
            <returns>
            The meta-data for the property this value is associated with.
            </returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ValueMetaData.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing">
            False if called from finalizer
            </param>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ValueMetaData.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ValueMetaData.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ValueMetaData.GetHashCode">
            <summary>
            Get a hash code for this instance.
            The value-space is greater than the key-space so hash 
            collisions are possible and may need to be accounted for,
            depending on your use-case.
            </summary>
            <returns>
            A hash code.
            </returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ValueMetaData.Equals(FiftyOne.Pipeline.Engines.FiftyOne.Data.IValueMetaData)">
            <summary>
            Check if this instance is equal to another object that 
            implements <see cref="T:FiftyOne.Pipeline.Engines.FiftyOne.Data.IValueMetaData"/>.
            </summary>
            <param name="other">
            The <see cref="T:FiftyOne.Pipeline.Engines.FiftyOne.Data.IValueMetaData"/> to check for 
            equality
            </param>
            <returns>
            True if the two instances are equal.
            False otherwise
            </returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ValueMetaData.CompareTo(FiftyOne.Pipeline.Engines.FiftyOne.Data.IValueMetaData)">
            <summary>
            Compare this instance with another object that implements 
            <see cref="T:FiftyOne.Pipeline.Engines.FiftyOne.Data.IValueMetaData"/>
            </summary>
            <param name="other">
            The <see cref="T:FiftyOne.Pipeline.Engines.FiftyOne.Data.IValueMetaData"/> to compare to
            </param>
            <returns>
            &gt;0 if this instance precedes `other` in the sort order.
            0 if they are equal in the sort order.
            &lt;0 if `other` precedes this instance in the sort order.
            </returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.ValueMetaData.ToString">
            <summary>
            Returns a string representation of this value.
            </summary>
            <returns>
            A string representation of this value.
            </returns>
        </member>
        <member name="T:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.MatchMethods">
            <summary>
            Enumeration of possible match methods used by the Hash engine.
            </summary>
        </member>
        <member name="F:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.MatchMethods.NONE">
            <summary>
            No match was found
            </summary>
        </member>
        <member name="F:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.MatchMethods.PERFORMANCE">
            <summary>
            The performance graph was used to find a match.
            </summary>
        </member>
        <member name="F:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.MatchMethods.COMBINED">
            <summary>
            Both the performance and predictive graphs were used to find 
            a match
            </summary>
        </member>
        <member name="F:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.MatchMethods.PREDICTIVE">
            <summary>
            The predictive graph was used to find a match.
            </summary>
        </member>
        <member name="T:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngine">
            <summary>
            Hash device detection engine. This engine takes User-Agents and
            other relevant HTTP headers and returns properties about the device
            which produced them e.g. DeviceType or ReleaseDate.
            </summary>
        </member>
        <member name="E:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngine.RefreshCompleted">
            <summary>
            This event is fired whenever the data that this engine makes use
            of has been updated.
            </summary>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngine.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,FiftyOne.Pipeline.Engines.Data.IAspectEngineDataFile,FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Wrappers.IConfigSwigWrapper,FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Wrappers.IRequiredPropertiesConfigSwigWrapper,System.Func{FiftyOne.Pipeline.Core.FlowElements.IPipeline,FiftyOne.Pipeline.Core.FlowElements.FlowElementBase{FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.IDeviceDataHash,FiftyOne.Pipeline.Engines.FiftyOne.Data.IFiftyOneAspectPropertyMetaData},FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.IDeviceDataHash},System.String,FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Wrappers.ISwigFactory)">
            <summary>
            Construct a new instance of the Hash engine.
            </summary>
            <param name="loggerFactory">Logger to use</param>
            <param name="deviceDataFactory">
            Method used to get an aspect data instance
            </param>
            <param name="dataFile">Meta data related to the data file</param>
            <param name="config">Configuration instance</param>
            <param name="properties">Properties to be initialised</param>
            <param name="tempDataFilePath">
            The directory to use when storing temporary copies of the 
            data file(s) used by this engine.
            </param>
            <param name="swigFactory">
            The factory object to use when creating swig wrapper instances.
            Usually a <see cref="T:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Wrappers.SwigFactory"/> instance.
            Unit tests can override this to mock behaviour as needed.
            </param>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngine.ElementDataKey">
            <summary>
            The key to use for this element's data in a 
            <see cref="T:FiftyOne.Pipeline.Core.Data.IFlowData"/> instance.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngine.Properties">
            <summary>
            Get the meta-data for properties populated by this engine.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngine.Profiles">
            <summary>
            Get the meta-data for profiles that may be returned by this
            engine.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngine.Components">
            <summary>
            Get the meta-data for components populated by this engine.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngine.Values">
            <summary>
            Get the meta-data for values that can be returned by this engine.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngine.DataSourceTier">
            <summary>
            The tier of the data that is currently being used by this engine.
            For example, 'Lite' or 'Enterprise'
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngine.AutomaticUpdatesEnabled">
            <summary>
            True if the data used by this engine will automatically be
            updated when a new file is available.
            False if the data will only be updated manually.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngine.EvidenceKeyFilter">
            <summary>
            A filter that defines the evidence that this engine can 
            make use of.
            </summary>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngine.RefreshData(System.String)">
            <summary>
            Called when update data is available in order to get the 
            engine to refresh it's internal data structures.
            This overload is used if the data is a physical file on disk.
            </summary>
            <param name="dataFileIdentifier">
            The identifier of the data file to update.
            This engine only uses one data file so this parameter is ignored.
            </param>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngine.RefreshData(System.String,System.IO.Stream)">
            <summary>
            Called when update data is available in order to get the 
            engine to refresh it's internal data structures.
            This overload is used when the data is presented as a 
            <see cref="T:System.IO.Stream"/>, usually a <see cref="T:System.IO.MemoryStream"/>.
            </summary>
            <param name="dataFileIdentifier">
            The identifier of the data file to update.
            This engine only uses one data file so this parameter is ignored.
            </param>
            <param name="stream">
            The <see cref="T:System.IO.Stream"/> containing the data to refresh the
            engine with.
            </param>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngine.ProcessEngine(FiftyOne.Pipeline.Core.Data.IFlowData,FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.IDeviceDataHash)">
            <summary>
            Perform processing for this engine
            </summary>
            <param name="data">
            The <see cref="T:FiftyOne.Pipeline.Core.Data.IFlowData"/> instance containing data for the 
            current request.
            </param>
            <param name="deviceData">
            The <see cref="T:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Data.IDeviceDataHash"/> instance to populate with
            property values
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown if a required parameter is null
            </exception>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngine.UnmanagedResourcesCleanup">
            <summary>
            Dispose of any unmanaged resources.
            </summary>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngine.GetDataDownloadType(System.String)">
            <summary>
            Get the value to use for the 'Type' parameter when calling
            the 51Degrees Distributor service to check for a newer 
            data file.
            </summary>
            <param name="identifier">
            The identifier of the data file to get the type for.
            This engine only uses one file so this parameter is ignored.
            </param>
            <returns>
            A string
            </returns>
        </member>
        <member name="T:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngineBuilder">
            <summary>
            Builder for the <see cref="T:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngine"/>. All options
            for the engine should be set here.
            </summary>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngineBuilder.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Construct a new instance of the builder.
            </summary>
            <param name="loggerFactory">
            Factory used to create loggers for the engine
            </param>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngineBuilder.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,FiftyOne.Pipeline.Engines.Services.IDataUpdateService)">
            <summary>
            Construct a new instance of the builder.
            </summary>
            <param name="loggerFactory">
            Factory used to create loggers for the engine
            </param>
            <param name="dataUpdateService">
            Data update service used to keep the engine's data up to date.
            </param>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngineBuilder.SetDifference(System.Int32)">
            <summary>
            Set the maximum difference in hash value to allow when processing
            HTTP headers.
            </summary>
            <param name="difference">Difference to allow</param>
            <returns>This builder</returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngineBuilder.SetDrift(System.Int32)">
            <summary>
            Set maximum drift in hash position to allow when processing HTTP
            headers.
            </summary>
            <param name="drift">Drift to allow</param>
            <returns>This builder</returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngineBuilder.SetAllowUnmatched(System.Boolean)">
            <summary>
            If set to false, a non-matching User-Agent will result in
            properties without set values. If set to true, a non-matching
            User-Agent will cause the 'default profiles' to be returned. This
            means that properties will always have values (i.e. no need to
            check .HasValue) but some may be inaccurate.. By default, this is
            false.
            </summary>
            <param name="allow">
            True if results with no matched hash nodes should be considered
            valid
            </param>
            <returns>This builder</returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngineBuilder.SetReuseTempFile(System.Boolean)">
            <summary>
            Set whether or not an existing temp file should be used if one is
            found in the temp directory.
            </summary>
            <param name="reuse">True if an existing file should be used</param>
            <returns>This builder</returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngineBuilder.SetUpdateMatchedUserAgent(System.Boolean)">
            <summary>
            Set whether or not the matched characters of the User-Agent should
            be stored to be returned in the results.
            </summary>
            <param name="update">
            True if the matched User-Agent should be stored
            </param>
            <returns>This builder</returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngineBuilder.SetUsePerformanceGraph(System.Boolean)">
            <summary>
            Specify if the 'performance' evaluation graph should be used 
            or not.
            The performance graph is faster than predictive but can
            be less accurate.
            Note that the performance graph will always be evaluated first 
            if it is enableds so if you have both performance and predictive 
            enabled, you will often be getting results from just the 
            performance graph.
            In that situation, predictive will only be used if a match cannot
            be found using the performance graph.
            </summary>
            <param name="use">
            True to use the performance graph, false to ignore it.
            </param>
            <returns>
            This builder.
            </returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngineBuilder.SetUsePredictiveGraph(System.Boolean)">
            <summary>
            Specify if the 'predictive' evaluation graph should be used 
            or not.
            The predictive graph is more accurate than performance
            but is also slower.
            Note that the performance graph will always be evaluated first 
            if it is enabled, so if you have both performance and predictive 
            enabled, you will often be getting results from just the 
            performance graph.
            In that situation, predictive will only be used if a match cannot
            be found using the performance graph.
            </summary>
            <param name="use">
            True to use the performance graph, false to ignore it.
            </param>
            <returns>
            This builder.
            </returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngineBuilder.SetPerformanceProfile(System.String)">
            <summary>
            Set the performance profile to use when constructing the data set.
            </summary>
            <param name="profileName">Name of the profile to use</param>
            <returns>This builder</returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngineBuilder.SetPerformanceProfile(FiftyOne.Pipeline.Engines.PerformanceProfiles)">
            <summary>
            Set the performance profile to use when constructing the data set.
            </summary>
            <param name="profile">Profile to use</param>
            <returns>This builder</returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngineBuilder.SetConcurrency(System.UInt16)">
            <summary>
            Set the expected number of concurrent operations using the engine.
            This sets the concurrency of the internal caches to avoid excessive
            locking.
            </summary>
            <param name="concurrency">Expected concurrent accesses</param>
            <returns>This builder</returns>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngineBuilder.SetCache(FiftyOne.Pipeline.Engines.Configuration.CacheConfiguration)">
            <summary>
            Override the SetCache method so it cannot be called successfully
            for the Device-detection Hash Engine.
            </summary>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngineBuilder.SetCacheSize(System.Int32)">
            <summary>
            Override the SetCacheSize method so it cannot be called successfully
            for the Device-detection Hash Engine.
            </summary>
            <param name="cacheSize"></param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngineBuilder.NewEngine(System.Collections.Generic.List{System.String})">
            <summary>
            Called by the 'BuildEngine' method to handle
            creation of the engine instance.
            </summary>
            <param name="properties"></param>
            <returns>
            An <see cref="T:FiftyOne.Pipeline.Engines.FlowElements.IAspectEngine"/>.
            </returns>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.FlowElements.DeviceDetectionHashEngineBuilder.DefaultDataDownloadType">
            <summary>
            Get the default value for the 'Type' parameter that is passed
            to the 51Degrees Distributor service when checking for updated
            data files.
            </summary>
        </member>
        <member name="T:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Interop.MapStringStringSwig.MapStringStringSwigEnumerator">
            Note that the IEnumerator documentation requires an InvalidOperationException to be thrown
            whenever the collection is modified. This has been done for changes in the size of the
            collection but not when one of the elements of the collection is modified as it is a bit
            tricky to detect unmanaged code that modifies the collection under our feet.
        </member>
        <member name="T:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Interop.VectorStringSwig.VectorStringSwigEnumerator">
            Note that the IEnumerator documentation requires an InvalidOperationException to be thrown
            whenever the collection is modified. This has been done for changes in the size of the
            collection but not when one of the elements of the collection is modified as it is a bit
            tricky to detect unmanaged code that modifies the collection under our feet.
        </member>
        <member name="T:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Messages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Messages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Messages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Messages.DeviceDataHashDisposed">
            <summary>
              Looks up a localized string similar to The DeviceDataHash instance has been closed, and cannot be used. Any result processing should be carried out within a &apos;try-with-resource&apos; block which closes the FlowData and any AutoCloseable elements..
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Messages.DeviceDataHashFailedToDispose">
            <summary>
              Looks up a localized string similar to Failed to close native results instance. A DeviceDataHash instance contains native unmanaged memory which needs to be closed. Failing to close could lead to memory leaks..
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Messages.DLLException">
            <summary>
              Looks up a localized string similar to Failed to load the Device Detection native library, common causes include: 
               - Missing dependencies:
                   o On Windows, the Visual C++ runtime is not installed, see the Visual Studio download page for the latest C++ Redistributable: https://visualstudio.microsoft.com/downloads/
                   o On Linux, the libatomic shared object is missing. On Debian based distributions, run ‘apt install libatomic1’; on RedHat based distributions, run ‘&lt;yum|dnf&gt; install libatomic’.
               - The DLL file was not copied to [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:FiftyOne.DeviceDetection.Hash.Engine.OnPremise.Messages.ExceptionSetCache">
            <summary>
              Looks up a localized string similar to A results cache cannot be configured in the Device-Detection Hash engine. The overhead of having to manage native object lifetimes when a cache is enabled outweighs the benefit of the cache..
            </summary>
        </member>
    </members>
</doc>
